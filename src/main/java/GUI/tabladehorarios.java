/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import CLASES.funcionario;
import CLASES.horarios;
import CONTROLADORES.controladorfuncionario;
import CONTROLADORES.ctrl_controladoravisos;
import CONTROLADORES.excel;
import PERSISTENCIA.CPrincipal;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author franc
 */
public class tabladehorarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form tabladehorarios
     */
    funcionario funcio;
    excel ex = new excel();
    public static List<horarios> horariosfuncio = new ArrayList<horarios>();
    public static boolean activo = false;
    controladorfuncionario CF = new controladorfuncionario();
    ctrl_controladoravisos CA = new ctrl_controladoravisos();

    public tabladehorarios() {
        activo = true;
        initComponents();
        TableColumn sportColumn = TablaDatos.getColumnModel().getColumn(0);
        JComboBox comboBox = new JComboBox();
        CF.CargarCBoxFuncios(comboBox);
        sportColumn.setCellEditor(new DefaultCellEditor(comboBox));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDatos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setBackground(new java.awt.Color(28, 28, 28));
        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        TablaDatos.setBackground(new java.awt.Color(255, 255, 255));
        TablaDatos.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TablaDatos.setForeground(new java.awt.Color(0, 0, 0));
        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NOMBRE", "LUNES", "OCUP", "MARTES", "OCUP", "MIERCOLES", "OCUP", "JUEVES", "OCUP", "VIERNES", "OCUP", "SABADO", "OCUP", "DOMINGO", "OCUP"
            }
        ));
        TablaDatos.setGridColor(new java.awt.Color(0, 0, 0));
        TablaDatos.setSelectionForeground(new java.awt.Color(0, 204, 102));
        TablaDatos.setShowGrid(true);
        TablaDatos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablaDatosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TablaDatos);

        jButton1.setBackground(new java.awt.Color(0, 204, 51));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Guardar Datos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/excel.png"))); // NOI18N
        jButton2.setText("Cargar tabla con excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(java.awt.SystemColor.textHighlight);
        jButton4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton4.setForeground(java.awt.SystemColor.activeCaptionText);
        jButton4.setText("NuevaTupla");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 255, 255));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/printer.png"))); // NOI18N
        jButton3.setText("IMPRIMIR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton5.setText("Guardar En Excel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3)
                        .addGap(76, 76, 76)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(134, 134, 134)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String datosuwu;

        for (int i = 0; i < TablaDatos.getRowCount(); i++) {
            horariosfuncio.clear();
            funcio = controladorfuncionario.findfuncionario((String) TablaDatos.getValueAt(i, 0));
            if (funcio != null) {
                datosuwu = (String) TablaDatos.getValueAt(i, 1);
                if (!datosuwu.equals("descansa") || !(datosuwu.equals("desc."))) {

                    crearhorario(datosuwu, (String) TablaDatos.getValueAt(i, 2), "Lunes");
                }

                datosuwu = (String) TablaDatos.getValueAt(i, 3);
                if (!datosuwu.equals("descansa") || !(datosuwu.equals("desc."))) {
                    crearhorario(datosuwu, (String) TablaDatos.getValueAt(i, 4), "Martes");
                }

                datosuwu = (String) TablaDatos.getValueAt(i, 5);

                if (!datosuwu.equals("descansa") || !(datosuwu.equals("desc."))) {
                    crearhorario(datosuwu, (String) TablaDatos.getValueAt(i, 6), "Miercoles");
                }

                datosuwu = (String) TablaDatos.getValueAt(i, 7);
                if (!datosuwu.equals("descansa") || !(datosuwu.equals("desc."))) {
                    crearhorario(datosuwu, (String) TablaDatos.getValueAt(i, 8), "Jueves");
                }

                datosuwu = (String) TablaDatos.getValueAt(i, 9);
                if (!datosuwu.equals("descansa") || !(datosuwu.equals("desc."))) {
                    crearhorario(datosuwu, (String) TablaDatos.getValueAt(i, 10), "Viernes");

                }

                datosuwu = (String) TablaDatos.getValueAt(i, 11);
                if (!datosuwu.equals("descansa") || !(datosuwu.equals("desc."))) {
                    crearhorario(datosuwu, (String) TablaDatos.getValueAt(i, 12), "Sabado");

                }

                datosuwu = (String) TablaDatos.getValueAt(i, 13);
                if (!datosuwu.equals("descansa") || !(datosuwu.equals("desc."))) {
                    crearhorario(datosuwu, (String) TablaDatos.getValueAt(i, 14), "Domingo");
                }
                funcio.setHorariosdelfuncionario(horariosfuncio);
                System.out.println(funcio);
                CPrincipal.getInstance().merge(funcio);
            } else {
                //no existe el funcionario
            }
            CA.carteldeok();
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public void crearhorario(String datosuwu, String ocup, String dia) {
        boolean masdeuno = false;
        String temporal;
        int contador = 1;
        String datos[];
        String madeunhorario[] = null;
        if (datosuwu.contains("/")) {
            masdeuno = true;
            contador++;
            madeunhorario = datosuwu.split("/"); //0 y 1 osea 2
        } else {

        }
        for (int i = 0; i < contador; i++) {
            if (masdeuno == true) {
                temporal = madeunhorario[i];
                datos = temporal.split("a");
            } else {
                datos = datosuwu.split("a");
            }
            horarios horariolunes = new horarios();
            horariolunes.setDia(dia);
            horariolunes.setOcupacion(ocup);
            horariolunes.setHoracomienzo(datos[0]);
            horariolunes.setHorafin(datos[1]);
            horariosfuncio.add(horariolunes);
            main.Horarios.add(horariolunes);
            horariolunes.setFuncionarioasignado(funcio);
            CPrincipal.getInstance().persist(horariolunes);
        }

    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser selecArchivo = new JFileChooser();
        File archivo;
        selecArchivo.setFileFilter(new FileNameExtensionFilter("Excel (.xls)", "xls"));
        selecArchivo.setFileFilter(new FileNameExtensionFilter("Excel (.xlsx)", "xlsx"));
        if (selecArchivo.showDialog(null, "Seleccionar archivo") == JFileChooser.APPROVE_OPTION) {
            archivo = selecArchivo.getSelectedFile();
            if (archivo.getName().endsWith("xls") || archivo.getName().endsWith("xlsx")) {
                ex.procesarexcel2(archivo);
                JOptionPane.showMessageDialog(null, "Datos cargados con exito");
            } else {
                JOptionPane.showMessageDialog(null, "Elija un formato valido.");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        activo = false;
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosing

    private void TablaDatosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaDatosKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_TablaDatosKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) TablaDatos.getModel();
        modelo.addRow(new Object[1]);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        MessageFormat header = new MessageFormat("HORARIOS SEMANALES");
        MessageFormat footer = new MessageFormat("Pagina{0,number,integer}");
        try {
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.LANDSCAPE);
            TablaDatos.print(JTable.PrintMode.FIT_WIDTH, header, footer, false, set, false);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("No se puede imprimir %s%n", e.getMessage());
        }
        //  printJavaComponent();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            exportarExcel(TablaDatos);
            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(tabladehorarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    public void exportarExcel(JTable t) throws IOException {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de excel", "xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar archivo");
        chooser.setAcceptAllFileFilterUsed(false);
        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().toString().concat(".xls");
            try {
                File archivoXLS = new File(ruta);
                if (archivoXLS.exists()) {
                    archivoXLS.delete();
                }
                archivoXLS.createNewFile();
                Workbook libro = new HSSFWorkbook();
                FileOutputStream archivo = new FileOutputStream(archivoXLS);
                Sheet hoja = libro.createSheet("Mi hoja de trabajo 1");
                hoja.setDisplayGridlines(false);
                for (int f = 0; f < t.getRowCount(); f++) {
                    Row fila = hoja.createRow(f);
                    for (int c = 0; c < t.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (f == 0) {
                            celda.setCellValue(t.getColumnName(c));
                        }
                    }
                }
                int filaInicio = 1;
                for (int f = 0; f < t.getRowCount(); f++) {
                    Row fila = hoja.createRow(filaInicio);
                    filaInicio++;
                    for (int c = 0; c < t.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        if (t.getValueAt(f, c) instanceof Double) {
                            celda.setCellValue(Double.parseDouble(t.getValueAt(f, c).toString()));
                        } else if (t.getValueAt(f, c) instanceof Float) {
                            celda.setCellValue(Float.parseFloat((String) t.getValueAt(f, c)));
                        } else {
                            celda.setCellValue(String.valueOf(t.getValueAt(f, c)));
                        }
                    }
                }
                libro.write(archivo);
                archivo.close();
                Desktop.getDesktop().open(archivoXLS);
            } catch (IOException | NumberFormatException e) {
                throw e;
            }
        }
    }

    public void printJavaComponent() {
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setJobName("Print Java Component");

        job.setPrintable(new Printable() {
            public int print(Graphics g, PageFormat pageFormat, int pageIndex) {
                if (pageIndex > 0) {
                    return (NO_SUCH_PAGE);
                } else {
                    Graphics2D g2d = (Graphics2D) g;
                    g2d.translate(pageFormat.getImageableY(), pageFormat.getImageableX());

                    TablaDatos.paint(g2d);

                    return (PAGE_EXISTS);
                }
            }
        });

        if (job.printDialog()) {
            try {
                PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
                set.add(OrientationRequested.LANDSCAPE);
                job.print(set);
            } catch (PrinterException e) {
                System.err.println(e.getMessage());
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable TablaDatos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
