/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import CLASES.funcionario;
import CLASES.horarios;
import CONTROLADORES.controladorfuncionario;
import CONTROLADORES.excel;
import PERSISTENCIA.CPrincipal;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author franc
 */
public class tabladehorarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form tabladehorarios
     */
    funcionario funcio;
    excel ex = new excel();
    public static List<horarios> horariosfuncio = new ArrayList<horarios>();
    public static boolean activo = false;

    public tabladehorarios() {
        activo=true;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaDatos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        TablaDatos.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NOMBRE", "LUNES", "OCUP", "MARTES", "OCUP", "MIERCOLES", "OCUP", "JUEVES", "OCUP", "VIERNES", "OCUP", "SABADO", "OCUP", "DOMINGO", "OCUP"
            }
        ));
        jScrollPane1.setViewportView(TablaDatos);

        jButton1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton1.setText("Guardar Datos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton2.setText("Cargar tabla con excel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1469, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jButton2)
                .addGap(228, 228, 228)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String datosuwu;
        String[] datos;
        for (int i = 0; i < TablaDatos.getRowCount(); i++) {
            datosuwu = (String) TablaDatos.getValueAt(i, 1);
            if (!datosuwu.equals("descansa")) {
            horarios horariolunes = new horarios();
            funcio = controladorfuncionario.findfuncionario((String) TablaDatos.getValueAt(i, 0));
            horariolunes.setDia("Lunes");     
            horariolunes.setOcupacion((String) TablaDatos.getValueAt(i, 2));
            datos = datosuwu.split("a");
            horariolunes.setHoracomienzo(datos[0]);
            horariolunes.setHorafin(datos[1]);
            horariosfuncio.add(horariolunes);
            main.Horarios.add(horariolunes);
             CPrincipal.getInstance().persist(horariolunes);
            }
            datosuwu = (String) TablaDatos.getValueAt(i, 3);
            if (!datosuwu.equals("descansa")) {
            horarios horariomartes = new horarios();
            horariomartes.setDia("Martes");
            horariomartes.setOcupacion((String) TablaDatos.getValueAt(i, 4));   
            datos = datosuwu.split("a");
            horariomartes.setHoracomienzo(datos[0]);
            horariomartes.setHorafin(datos[1]);
            horariosfuncio.add(horariomartes);
            main.Horarios.add(horariomartes);
            CPrincipal.getInstance().persist(horariomartes);
            }
            datosuwu = (String) TablaDatos.getValueAt(i, 5);
            
            if (!datosuwu.equals("descansa")) {
            horarios horariomiercoles = new horarios();
            horariomiercoles.setDia("Miercoles");
            horariomiercoles.setOcupacion((String) TablaDatos.getValueAt(i, 6));
            datos = datosuwu.split("a");
            horariomiercoles.setHoracomienzo(datos[0]);
            horariomiercoles.setHorafin(datos[1]);
            horariosfuncio.add(horariomiercoles); 
            main.Horarios.add(horariomiercoles);
            CPrincipal.getInstance().persist(horariomiercoles);
            }
            datosuwu = (String) TablaDatos.getValueAt(i, 7);
            if (!datosuwu.equals("descansa")) {
            horarios horariojueves = new horarios();
            horariojueves.setDia("Jueves");
            horariojueves.setOcupacion((String) TablaDatos.getValueAt(i, 8));
            datos = datosuwu.split("a");
            horariojueves.setHoracomienzo(datos[0]);
            horariojueves.setHorafin(datos[1]);
            horariosfuncio.add(horariojueves);
            main.Horarios.add(horariojueves);
            CPrincipal.getInstance().persist(horariojueves);
            }
            datosuwu = (String) TablaDatos.getValueAt(i, 9);
            if (!datosuwu.equals("descansa")) {
            horarios horarioviernes = new horarios();
            horarioviernes.setDia("Viernes");
            horarioviernes.setOcupacion((String) TablaDatos.getValueAt(i, 10));
            datos = datosuwu.split("a");
            horarioviernes.setHoracomienzo(datos[0]);
            horarioviernes.setHorafin(datos[1]);
            horariosfuncio.add(horarioviernes);
            main.Horarios.add(horarioviernes);
            CPrincipal.getInstance().persist(horarioviernes);
            
            }
            datosuwu = (String) TablaDatos.getValueAt(i, 11);
            if (!datosuwu.equals("descansa")) {
                horarios horariosabado = new horarios();
                horariosabado.setDia("Sabado");
                horariosabado.setOcupacion((String) TablaDatos.getValueAt(i, 12));
                datos = datosuwu.split("a");
                horariosabado.setHoracomienzo(datos[0]);
                horariosabado.setHorafin(datos[1]);
                horariosfuncio.add(horariosabado);
                main.Horarios.add(horariosabado);
                CPrincipal.getInstance().persist(horariosabado);

            }
            datosuwu = (String) TablaDatos.getValueAt(i, 13);
            if (!datosuwu.equals("descansa")) {
                horarios horariodomingo = new horarios();
                horariodomingo.setDia("Domingo");
                horariodomingo.setOcupacion((String) TablaDatos.getValueAt(i, 14));
                datos = datosuwu.split("a");
                horariodomingo.setHoracomienzo(datos[0]);
                horariodomingo.setHorafin(datos[1]);
                horariosfuncio.add(horariodomingo);
                main.Horarios.add(horariodomingo);
                CPrincipal.getInstance().persist(horariodomingo);
            }
           
            funcio.setHorariosdelfuncionario(horariosfuncio);

            CPrincipal.getInstance().merge(funcio);
        }
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser selecArchivo = new JFileChooser();
        File archivo;
        selecArchivo.setFileFilter(new FileNameExtensionFilter("Excel (.xls)", "xls"));
        selecArchivo.setFileFilter(new FileNameExtensionFilter("Excel (.xlsx)", "xlsx"));
        if (selecArchivo.showDialog(null, "Seleccionar archivo") == JFileChooser.APPROVE_OPTION) {
            archivo = selecArchivo.getSelectedFile();
            if (archivo.getName().endsWith("xls") || archivo.getName().endsWith("xlsx")) {

                ex.procesarexcel2(archivo);
                JOptionPane.showMessageDialog(null, "Datos cargados con exito");
            } else {
                JOptionPane.showMessageDialog(null, "Elija un formato valido.");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        activo=true;
        // TODO add your handling code here:
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable TablaDatos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
